unset exit
exists 13/m2defs
if {status} == 0
create 13/m2defs
end

unset exit
exists obj
if {status} == 0
create obj
end

delete 13/m2defs/=.sym
delete =.sym
delete =.ref

assemble def/charset.def
assemble def/memorymanag.def
assemble def/common.def
assemble def/ascii.def
assemble def/consoleio.def
assemble def/ezcommandli.def
assemble def/gsbug.def
assemble def/gsosinterfa.def
assemble def/filesystem.def
assemble def/ezfilesyste.def
assemble def/inout.def
assemble def/integermath.def
assemble def/m2lib.def modula2=(-k) > m2lib.key
assemble def/ezdump.def
assemble def/notesynthes.def
assemble def/numberconve.def
assemble def/realconvers.def
assemble def/realinout.def
assemble def/scheduler.def
assemble def/soundmanage.def
assemble def/ezstorage.def
assemble def/storage.def modula2=(-k) > storage.key
assemble def/strings.def
assemble def/terminal.def
assemble def/w65c816.def
assemble def/ace.def
assemble def/loader.def
assemble def/notesequenc.def
assemble def/orcashell.def
assemble def/resourceman.def
assemble def/fastfilesys.def
assemble def/texttools.def
assemble def/midi.def
assemble def/misctoolset.def
assemble def/toollocator.def
assemble def/fontmanager.def
assemble def/quickdrawii.def
assemble def/scrapmanage.def
assemble def/printmanage.def
assemble def/eventmanage.def
assemble def/deskmanager.def
assemble def/lineedit.def
assemble def/windowmanag.def
assemble def/listmanager.def
assemble def/textedit.def
assemble def/controlmana.def
assemble def/dialogmanag.def
assemble def/menumanager.def
assemble def/standardfil.def
assemble def/eztools.def
assemble def/ezpaths.def
assemble def/mathlib0.def
assemble def/longmath.def
assemble def/lists.def
assemble def/listutility.def
assemble def/ezstrings.def
assemble def/superread.def
assemble def/cdaconsole.def
assemble def/ezcontrols.def
assemble def/ezlineedit.def

delete obj/=.a obj/=.root

assemble mod/common.mod      keep=obj/$
assemble mod/ezstorage.mod   keep=obj/$
assemble mod/strings.mod     keep=obj/$
assemble mod/gsosinterfa.mod keep=obj/$
assemble mod/consoleio.mod   keep=obj/$
assemble mod/terminal.mod    keep=obj/$
assemble mod/filesystem.mod  keep=obj/$
assemble mod/ezfilesyste.mod keep=obj/$
assemble mod/inout.mod       keep=obj/$
assemble mod/ezdump.mod      keep=obj/$
assemble mod/numberconve.mod keep=obj/$
assemble mod/fastfilesys.mod keep=obj/$
assemble mod/ezcommandli.mod keep=obj/$
assemble mod/realconvers.mod keep=obj/$
assemble mod/realinout.mod   keep=obj/$
assemble mod/eztools.mod     keep=obj/$
assemble mod/ezpaths.mod     keep=obj/$
assemble mod/lists.mod       keep=obj/$
assemble mod/listutility.mod keep=obj/$
assemble mod/ezstrings.mod   keep=obj/$
assemble mod/superread.mod   keep=obj/$
assemble mod/cdaconsole.mod  keep=obj/$
assemble mod/ezcontrols.mod  keep=obj/$
assemble mod/ezlineedit.mod  keep=obj/$
assemble asm/mathlib.asm     keep=obj/$
assemble asm/mathlib0.asm    keep=obj/$
assemble asm/longmath.asm    keep=obj/$

set toolmissing 0
unset exit
exists 17/assign
if {status} == 0
echo "assign tool is missing. In order to automate the build entirely, install the assign tool,"
echo "which can be retrieved and built from: https://github.com/pkclsoft/assign"
echo ""
set toolmissing 1
end

exists 17/grep
if {status} == 0
echo "grep tool is missing. In order to automate the build entirely, install the assign tool,"
echo "which can be retrieved and built from: https://github.com/pkclsoft/gsgrep"
echo ""
set toolmissing 1
end

exists 17/minised
if {status} == 0
echo "minised tool is missing. In order to automate the build entirely, install the assign tool,"
echo "which can be retrieved and built from: https://github.com/pkclsoft/minised"
echo ""
set toolmissing 1
end

if {toolmissing} == 0
  echo "Now updating the keys of M2Lib.ASM and Storage.ASM, and will then"
  echo "execute build2."
  echo ""

  fixasmkeys

  build2
else
  echo "Now update the key of M2Lib.ASM and Storage.ASM, and execute build2."
  echo "To do this, back in a macOS terminal window, execute the fixasmkeys.sh"
  echo "script."
end
