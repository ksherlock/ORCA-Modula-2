(*$NoImp*)
DEFINITION MODULE DialogManager;
(*
  Dialog Manager Interface File
*)

FROM Common IMPORT
  Ref, String255Ptr;
FROM ControlManager IMPORT
  CtlHandle;
FROM EventManager IMPORT
  EventRecordPtr;
FROM MemoryManager IMPORT
  Handle;
FROM QuickDrawII IMPORT
  GrafPortPtr, Rect, Point, RectPtr, FontHandle, ColorTablePtr;
FROM SYSTEM IMPORT
  ADDRESS, BYTE;

CONST
  (* 
    Dialog scroll bar commands
  *)
  getInitView     =   0001H;          (* view size at creation    *)
  getInitTotal    =   0002H;          (* total size at creation   *)
  getInitValue    =   0003H;          (* value at creation        *)
  scrollLineUp    =   0004H;          (* scroll one line up       *)
  scrollLineDown  =   0005H;          (* scroll one line down     *)
  scrollPageUp    =   0006H;          (* scroll one page up       *)
  scrollPageDown  =   0007H;          (* scroll one page down     *)
  scrollThumb     =   0008H;          (* scroll to thumb position *)

  (* 
    Item types 
  *)
  buttonItem      =   000AH;          (* standard button control             *)
  checkItem       =   000BH;          (* standard check box control          *)
  radioItem       =   000CH;          (* standard radio button control       *)
  scrollBarItem   =   000DH;          (* special dialog scroll bar           *)
  userCtlItem     =   000EH;          (* application-defined control         *)
  statText        =   000FH;          (* static text - cannot be edited      *)
  longStatText    =   0010H;          (* static text                         *)
  editLine        =   0011H;          (* text that can be edited             *)
  iconItem        =   0012H;          (* an icon                             *)
  picItem         =   0013H;          (* a QuickDrawII picture               *)
  userItem        =   0014H;          (* application-defined item            *)
  userCtlItem2    =   0015H;          (* application-defined control         *)
  longStatText2   =   0016H;          (* static text - text cannot be edited *)
                                      (* and can contain embedded commands   *)
  itemDisable     =   8000H;          (* added to any item to disable item   *)

  (* item type range *)
  minItemType     =   000AH;          (* minimum valid item type *)
  maxItemType     =   0016H;          (* maximum valid item type *)

  (* item IDs *)
  ok              =   0001H;
  cancel          =   0002H;

  (* 
    Part codes 
  *)
  inButton        =   0002H;          (* user clicked simple button       *)
  inCheckBox      =   0003H;          (* user clicked check box           *)
  inRadioButton   =   0004H;          (* user clicked radio button        *)
  inUpArrow       =   0005H;          (* user clicked up arrow            *)
  inDownArrow     =   0006H;          (* user clicked down arrow          *)
  inPageUp        =   0007H;          (* user clicked page-up area        *)
  inPageDown      =   0008H;          (* user clicked page-down area      *)
  inStatText      =   0009H;          (* user clicked static text item    *)
  inGrow          =   000AH;          (* user clicked size box            *)
  inEditLine      =   000BH;          (* user clicked in text to edit     *)
  inUserItem      =   000CH;          (* user clicked application item    *)
  inLongStatText  =   000DH;          (* user clicked longStatText item   *)
  inIconItem      =   000EH;          (* user clicked an icon             *)
  inLongStatText2 =   000FH;          (* user clicked longStatText2 item  *)
  inThumb         =   0081H;          (* user clicked thumb of scroll item *)

  (* 
    Stage bit flags 
  *)
  okDefault       =   0000H;          (* OK is default for alert     *)
  cancelDefault   =   0040H;          (* Cancel is default for alert *)
  alertDrawn      =   0080H;          (* draw alert                  *)

TYPE
  UserItemProc = PROCEDURE(GrafPortPtr, CARDINAL);
  ScrollBarItemActionProc = PROCEDURE(CARDINAL, GrafPortPtr, CARDINAL): CARDINAL;

  ItemTemplate = 
    RECORD
      itemID:    CARDINAL;
      itemRect:  Rect;
      itemType:  CARDINAL;
      itemDescr: Ref;
      itemValue: CARDINAL;
      itemFlag:  CARDINAL;
      itemColor: ColorTablePtr;
    END;
  ItemTemplatePtr = POINTER TO ItemTemplate;

  AlertTemplate = 
    RECORD
      atBoundsRect: Rect;
      atAlertID:    CARDINAL;
      atStage1:     BYTE;
      atStage2:     BYTE;
      atStage3:     BYTE;
      atStage4:     BYTE;
  (* This array should be set to reflect the number of items in the alert.   *)
  (* The last pointer in the array should be NIL to mark the end of the list *)
      tItemList:   ARRAY [1..10] OF ItemTemplatePtr;
    END;
  AlertTemplatePtr = POINTER TO AlertTemplate;

  DialogTemplate = 
    RECORD
      dtBoundsRect: Rect;
      dtVisible:    BOOLEAN;
      dtRefCon:     LONGINT;
  (* This array should be set to reflect the number of items in the dialog.  *)
  (* The last pointer in the array should be NIL to mark the end of the list *)
      dtItemList:   ARRAY [1..10] OF ItemTemplatePtr;
    END;
  DialogTemplatePtr = POINTER TO DialogTemplate;

  IconRecord = 
    RECORD
      iconRect:  Rect;
      iconImage: ARRAY [1..64] OF CARDINAL;  (* user can change size of array *)
    END;

  UserCtlItemPB = 
    RECORD
      defProcParm: Ref;
      titleParm:   Ref;
      param2:      CARDINAL;
      param1:      CARDINAL;
    END;

  FilterProc = PROCEDURE(GrafPortPtr, EventRecordPtr, ItemTemplatePtr): BOOLEAN;

PROCEDURE DialogBootInit; TOOL 0115H;
(*
  WARNING: an application should NEVER make this call
*)

PROCEDURE DialogStartup(UserID: CARDINAL); TOOL 0215H;

PROCEDURE DialogShutDown; TOOL 0315H;

PROCEDURE DialogVersion(): CARDINAL; TOOL 0415H;

PROCEDURE DialogReset; TOOL 0515H;
(*
  WARNING: an application should NEVER make this call
*)

PROCEDURE DialogStatus(): BOOLEAN; TOOL 0615H;

PROCEDURE Alert(alertTemplatePtr: AlertTemplatePtr;
                filterProcPtr:    FilterProc): CARDINAL; TOOL 1715H;

PROCEDURE CautionAlert(alertTemplatePtr:  AlertTemplatePtr;
                       filterProc:        FilterProc): CARDINAL; TOOL 1A15H;

PROCEDURE CloseDialog(theDialog: GrafPortPtr); TOOL 0C15H;

PROCEDURE DefaultFilter(    theDialogPtr: GrafPortPtr; 
                            theEventPtr:  EventRecordPtr;
                        VAR itemHitPtr:   CARDINAL): BOOLEAN; TOOL 3615H;

PROCEDURE DialogSelect(    theEventPtr: EventRecordPtr; 
                       VAR resultPtr:   GrafPortPtr;
                       VAR itemHit:     CARDINAL): BOOLEAN; TOOL 1115H;

PROCEDURE DisableDItem(theDialog: GrafPortPtr; itemID: CARDINAL); TOOL 3915H;

PROCEDURE DlgCopy(theDialog: GrafPortPtr); TOOL 1315H;

PROCEDURE DlgCut(theDialog: GrafPortPtr); TOOL 1215H;

PROCEDURE DlgDelete(theDialog: GrafPortPtr); TOOL 1515H;

PROCEDURE DlgPaste(theDialog: GrafPortPtr); TOOL 1415H;

PROCEDURE DrawDialog(theDialog: GrafPortPtr); TOOL 1615H;

PROCEDURE EnableDItem(theDialog: GrafPortPtr; itemID: CARDINAL); TOOL 3A15H;

PROCEDURE ErrorSound(soundProcPtr: ADDRESS); TOOL 0915H;

PROCEDURE FindDItem(theDialog: GrafPortPtr; thePoint: Point): CARDINAL; TOOL 2415H;

PROCEDURE GetAlertStage(): CARDINAL; TOOL 3415H;

PROCEDURE GetControlDItem(theDialog: GrafPortPtr; itemID: CARDINAL): CtlHandle; TOOL 1E15H;

PROCEDURE GetDefButton(theDialog: GrafPortPtr): CARDINAL; TOOL 3715H;

PROCEDURE GetDItemBox(    theDialog:  GrafPortPtr; 
                          itemID:     CARDINAL;
                      VAR itemBoxPtr: Rect); TOOL 2815H;

PROCEDURE GetDItemType(theDialog: GrafPortPtr; itemID: CARDINAL): CARDINAL; TOOL 2615H;

PROCEDURE GetDItemValue(theDialog: GrafPortPtr; itemID: CARDINAL): CARDINAL; TOOL 2E15H;

PROCEDURE GetFirstDItem(theDialog: GrafPortPtr): CARDINAL; TOOL 2A15H;

PROCEDURE GetIText(theDialog: GrafPortPtr; 
                   itemID:    CARDINAL; 
                   resultPtr: ADDRESS); TOOL 1F15H;

PROCEDURE GetNewDItem(theDialog:        GrafPortPtr;
                      itemTemplatePtr:  ItemTemplatePtr); TOOL 3315H;

PROCEDURE GetNewModalDialog(dialogTemplatePtr: DialogTemplatePtr): GrafPortPtr; TOOL 3215H;

PROCEDURE GetNextDItem(theDialog: GrafPortPtr; itemID: CARDINAL): CARDINAL; TOOL 2B15H;

PROCEDURE HideDItem(theDialog: GrafPortPtr; itemID: CARDINAL); TOOL 2215H;

PROCEDURE IsDialogEvent(theEvent: EventRecordPtr): BOOLEAN; TOOL 1015H;

PROCEDURE ModalDialog(filterProc: FilterProc): CARDINAL; TOOL 0F15H;

PROCEDURE ModalDialog2(filterProc: ADDRESS): LONGINT; TOOL 2C15H;
(* 
  Note that ModalDialog2 returns 2 CARDINALs: 

    Low word = item hit.
    High word = part code of item hit
*)

PROCEDURE NewDItem(theDialog:     GrafPortPtr; 
                   itemID:        CARDINAL; 
                   itemRectPtr:   RectPtr;
                   itemType:      CARDINAL; 
                   itemDescr:     Ref;
                   itemValue:     CARDINAL;
                   itemFlag:      CARDINAL; 
                   itemColorPtr:  ColorTablePtr); TOOL 0D15H;

PROCEDURE NewModalDialog(dBoundsRectPtr:  RectPtr; 
                         dVisibleFlag:    BOOLEAN;
                         dRefCon:         LONGINT): GrafPortPtr; TOOL 0A15H;

PROCEDURE NewModelessDialog(dBoundsRectPtr: Rect; 
                            dTitlePtr:      String255Ptr;
                            dBehindPtr:     GrafPortPtr;
                            dFlag:          CARDINAL;
                            dRefCon:        LONGINT; 
                            dFullSizePtr:   RectPtr): GrafPortPtr; TOOL 0B15H;

PROCEDURE NoteAlert(alertTemplatePtr: AlertTemplatePtr; 
                    filterProcPtr:    FilterProc): CARDINAL; TOOL 1915H;

PROCEDURE ParamText(param0, param1, param2, param3: String255Ptr); TOOL 1B15H;

PROCEDURE RemoveDItem(theDialog: GrafPortPtr; itemID: CARDINAL); TOOL 0E15H;

PROCEDURE ResetAlertStage; TOOL 3515H;

PROCEDURE SelectIText(theDialog:  GrafPortPtr; 
                      itemID:     CARDINAL;
                      startSel:   CARDINAL;
                      endSel:     CARDINAL); TOOL 2115H;

PROCEDURE SetDAFont(theFontHandle: FontHandle); TOOL 1C15H;

PROCEDURE SetDefButton(defButtonID: CARDINAL; theDialog: GrafPortPtr); TOOL 3815H;

PROCEDURE SetDItemBox(theDialog:  GrafPortPtr; 
                      itemID:     CARDINAL;
                      itemBox:    RectPtr); TOOL 2915H;

PROCEDURE SetDItemType(itemType:  CARDINAL; 
                       theDialog: GrafPortPtr;
                       itemID:    CARDINAL); TOOL 2715H;

PROCEDURE SetDItemValue(itemValue:  CARDINAL; 
                        theDialog:  GrafPortPtr;
                        itemID:     CARDINAL); TOOL 2F15H;

PROCEDURE SetIText(theDialog: GrafPortPtr; 
                   itemID:    CARDINAL;
                   theString: String255Ptr); TOOL 2015H;

PROCEDURE ShowDItem(theDialog: GrafPortPtr; itemID: CARDINAL); TOOL 2315H;

PROCEDURE StopAlert(alertTemplatePtr: AlertTemplatePtr; 
                    filterProc:       FilterProc): CARDINAL; TOOL 1815H;

PROCEDURE UpdateDialog(theDialog: GrafPortPtr; updateRgnHandle: Handle); TOOL 2515H;

END DialogManager.
