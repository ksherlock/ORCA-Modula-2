DEFINITION MODULE Strings;
(*
   Variable-length character strings handler.

   NOTE: For most of these string handling procedures,there is the possibility
   of the user not providing a variable large enough to contain the result of
   a string operation. Should this possibility arise, truncation may result,
   as there will be no other error notification. The implementation of this
   module does not cause a range error, instead, it truncates silently.

   String variables have the following characteristics:
     - They are of type ARRAY OF CHAR.
     - The array lower bound must be zero.
     - The length of the string is the size of the string variable, unless a
       null character (0C) occurs in the string to indicate end of string.
*)

TYPE
  aCompareStrProc = PROCEDURE(ARRAY OF CHAR, ARRAY OF CHAR): INTEGER;
  (*
    OPERATION:
      Compare two strings.

      Returns an integer value indicating the comparison result:
        -1 if s1 is less than s2;
         0 if s1 equals s2;
         1 if s1 is greater than s2
  *)

PROCEDURE Assign(    source:      ARRAY OF CHAR;
                 VAR destination: ARRAY OF CHAR);
(*
  OPERATION:
    Assign the contents of string variable source into string variable
    destination.
*)

PROCEDURE Insert(    substr: ARRAY OF CHAR;
                 VAR str:    ARRAY OF CHAR;
                     inx:    CARDINAL);
(*
  OPERATION:
    Insert the string substr into str,starting at str[inx].

  NOTE:
    If inx is equal or greater than Length(str) then substr is appended to end
    of dest.
*)

PROCEDURE Delete(VAR str: ARRAY OF CHAR;
                     inx: CARDINAL;
                     len: CARDINAL);
(*
  OPERATION:
    Delete len characters from str, starting at str[inx].

  NOTE:
    If inx >= Length(str) then nothing happens. If there are not len
    characters to delete, characters to the end of string are deleted.
*)

PROCEDURE Pos(substr, str: ARRAY OF CHAR): CARDINAL;
(*
  OPERATION:
    Return the index into str of the first occurrence of the substr.

  NOTE:
    Pos returns a value greater then HIGH(str) if no occurrence of the
    substring is found.
*)

PROCEDURE Copy(    str:    ARRAY OF CHAR;
                   inx:    CARDINAL;
                   len:    CARDINAL;
               VAR result: ARRAY OF CHAR);
(*
  OPERATION:
    Copy at most len characters from str into result.

    str     source string,
    inx     starting position in 'str',
    len     maximum number of characters to copy,

    result  copied string
*)

PROCEDURE Concat(    s1, s2: ARRAY OF CHAR;
                 VAR result: ARRAY OF CHAR);
(*
  OPERATION:
    Concatenate two strings.

    s1      left string,
    s2      right string,

    result  receives left string followed by right string.
*)
  
PROCEDURE Length(str: ARRAY OF CHAR): CARDINAL;
(*
  OPERATION:
    Return the number of characters in a string.
*)

VAR
  CompareStr: aCompareStrProc;
  (*
    OPERATION:
      Compare two strings.

      Returns an integer value indicating the comparison result:
        -1 if s1 is less than s2;
         0 if s1 equals s2;
         1 if s1 is greater than s2

    NOTE:
      Defined as a variable so that we can invisibly use the M2Lib routine
      for speed.
  *)

END Strings.
